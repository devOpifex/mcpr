[{"path":"https://mcpr.opifex.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://mcpr.opifex.org/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://mcpr.opifex.org/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://mcpr.opifex.org/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://mcpr.opifex.org/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://mcpr.opifex.org/articles/client-integration.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Integrating mcpr with MCP Clients","text":"Model Context Protocol (MCP) allows register custom tools various AI clients. vignette demonstrates create simple MCP server mcpr register popular clients including Claude Code, Cursor, OpenAI GPTs, LangChain.","code":""},{"path":"https://mcpr.opifex.org/articles/client-integration.html","id":"creating-a-simple-math-calculator-server","dir":"Articles","previous_headings":"","what":"Creating a Simple Math Calculator Server","title":"Integrating mcpr with MCP Clients","text":"Let’s create simple MCP server basic calculator tool: Save code file, example calculator_server.R, add code serve end:","code":"# Create a new MCP server math_server <- new_server(   name = \"r-calculator\",   description = \"A simple calculator that performs basic arithmetic operations\",   version = \"1.0.0\" )  # Create a calculator tool calculator <- new_tool(   name = \"math_calculator\",   description = \"Performs basic arithmetic operations\",   input_schema = schema(     properties = properties(       operation = property_enum(         \"Operation\",          \"Math operation to perform\",         enum = c(\"add\", \"subtract\", \"multiply\", \"divide\"),         required = TRUE       ),       a = property_number(\"First number\", \"First operand\", required = TRUE),       b = property_number(\"Second number\", \"Second operand\", required = TRUE)     )   ),   handler = function(input) {     result <- switch(input$operation,       \"add\" = input$a + input$b,       \"subtract\" = input$a - input$b,       \"multiply\" = input$a * input$b,       \"divide\" = input$a / input$b     )     response_text(paste(\"Result:\", result))   } )  # Add the tool to the server math_server <- add_capability(math_server, calculator) # At the end of calculator_server.R, add: serve_io(math_server)"},{"path":[]},{"path":"https://mcpr.opifex.org/articles/client-integration.html","id":"claude-code","dir":"Articles","previous_headings":"Registering with MCP Clients","what":"Claude Code","title":"Integrating mcpr with MCP Clients","text":"Claude Code supports registering MCP tools using claude mcp command: Claude automatically discover use registered MCP server’s capabilities.","code":"# Register the MCP server claude mcp add r-calculator -- Rscript /path/to/calculator_server.R  # List registered MCP servers claude mcp list  # Use the registered tool claude \"Add 2 to 40\""},{"path":"https://mcpr.opifex.org/articles/client-integration.html","id":"cursor","dir":"Articles","previous_headings":"Registering with MCP Clients","what":"Cursor","title":"Integrating mcpr with MCP Clients","text":"Cursor supports registering MCP tools via configuration: Open Cursor settings Navigate “Tools” section Name: r-calculator Command: Rscript /path//calculator_server.R Save settings Now ask Cursor perform calculations, access MCP tool.","code":""},{"path":"https://mcpr.opifex.org/articles/client-integration.html","id":"openai-gpt","dir":"Articles","previous_headings":"Registering with MCP Clients","what":"OpenAI GPT","title":"Integrating mcpr with MCP Clients","text":"OpenAI GPTs, ’ll need run MCP server HTTP: register custom GPT: Create custom GPT GPT Builder “Configure” tab, add “Action” Set Authentication “None” Set API URL server (e.g., http://localhost:8080) Import schema URL: http://localhost:8080/openapi.json Save GPT custom GPT now able use MCP calculator.","code":"# Modify your calculator_server.R to use HTTP instead of IO serve_http(math_server, port = 8080)"},{"path":"https://mcpr.opifex.org/articles/client-integration.html","id":"langchain","dir":"Articles","previous_headings":"Registering with MCP Clients","what":"LangChain","title":"Integrating mcpr with MCP Clients","text":"LangChain provides adapters specifically MCP integration: Alternatively, can use process-based approach:","code":"from langchain_mcp_adapters.client import MultiServerMCPClient from langchain.agents import create_tool_calling_agent from langchain_openai import ChatOpenAI  # Connect to your R-based MCP server # You need to run your server with serve_http for this approach mcp_client = MultiServerMCPClient(     servers=[{\"url\": \"http://localhost:8080\"}] )  # Get tools from the MCP server tools = mcp_client.get_tools()  # Create a LangChain agent with the MCP tools llm = ChatOpenAI(model=\"gpt-4o\") agent = create_tool_calling_agent(llm, tools)  # Use the agent response = agent.invoke({\"input\": \"What is 10 multiplied by 5?\"}) print(response[\"output\"]) from langchain_mcp_adapters.client import MultiServerMCPClient from langchain.agents import create_tool_calling_agent from langchain_openai import ChatOpenAI  # Connect to your R-based MCP server using process mcp_client = MultiServerMCPClient(     servers=[{\"command\": [\"Rscript\", \"/path/to/calculator_server.R\"]}] )  # The rest is the same as above tools = mcp_client.get_tools() llm = ChatOpenAI(model=\"gpt-4o\") agent = create_tool_calling_agent(llm, tools)"},{"path":"https://mcpr.opifex.org/articles/client-integration.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Integrating mcpr with MCP Clients","text":"mcpr, can create MCP servers register seamlessly various AI clients. enables AI tools leverage R’s statistical data processing capabilities. advanced usage, consider: Adding multiple tools server Creating resources serve data Implementing prompts text generation Handling complex data types tools See vignettes function documentation details advanced features.","code":""},{"path":"https://mcpr.opifex.org/articles/client-usage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using the MCP Client","text":"mcpr package allows create Model Context Protocol (MCP) servers R also connect existing MCP servers client. vignette guide using MCP client interact servers.","code":""},{"path":"https://mcpr.opifex.org/articles/client-usage.html","id":"creating-an-mcp-client","dir":"Articles","previous_headings":"","what":"Creating an MCP Client","title":"Using the MCP Client","text":"client functionality allows connect MCP server, whether ’s running locally separate process, remotely via HTTP. ’s create client:","code":""},{"path":"https://mcpr.opifex.org/articles/client-usage.html","id":"connecting-to-a-local-server-process","dir":"Articles","previous_headings":"Creating an MCP Client","what":"Connecting to a Local Server Process","title":"Using the MCP Client","text":"can connect server running separate process. useful testing need communicate local MCP implementation:","code":"# Create a client that connects to a local process client <- new_client(   \"Rscript\",                                # Command to run   \"path/to/your/server.R\",                  # Path to the server script   name = \"calculator\",                      # Optional name for the server   version = \"1.0.0\"                         # Optional version )"},{"path":"https://mcpr.opifex.org/articles/client-usage.html","id":"connecting-to-an-http-server","dir":"Articles","previous_headings":"Creating an MCP Client","what":"Connecting to an HTTP Server","title":"Using the MCP Client","text":"can also connect MCP server running HTTP:","code":"# Create a client that connects to an HTTP server http_client <- new_client(\"Rscript\", \"path/to/your/server.R\")"},{"path":"https://mcpr.opifex.org/articles/client-usage.html","id":"basic-client-operations","dir":"Articles","previous_headings":"","what":"Basic Client Operations","title":"Using the MCP Client","text":"created client, can interact server using various client methods:","code":""},{"path":"https://mcpr.opifex.org/articles/client-usage.html","id":"initializing-the-connection","dir":"Articles","previous_headings":"Basic Client Operations","what":"Initializing the Connection","title":"Using the MCP Client","text":"’s good practice initialize connection first:","code":"# Initialize the connection res <- initialize(client) print(res)"},{"path":"https://mcpr.opifex.org/articles/client-usage.html","id":"listing-available-tools","dir":"Articles","previous_headings":"Basic Client Operations","what":"Listing Available Tools","title":"Using the MCP Client","text":"can list tools server provides:","code":"# Get a list of available tools tools <- tools_list(client) print(tools)"},{"path":"https://mcpr.opifex.org/articles/client-usage.html","id":"calling-a-tool","dir":"Articles","previous_headings":"Basic Client Operations","what":"Calling a Tool","title":"Using the MCP Client","text":"know tools available, can call specific parameters:","code":"# Call the math_calculator tool result <- tools_call(   client,   list(     name = \"math_calculator\",     params = list(       name = \"add\",       arguments = list(         a = 10,         b = 5       )     )   ) ) print(result)"},{"path":"https://mcpr.opifex.org/articles/client-usage.html","id":"working-with-prompts","dir":"Articles","previous_headings":"Basic Client Operations","what":"Working with Prompts","title":"Using the MCP Client","text":"server prompts available, can list use :","code":"# List available prompts prompts <- prompts_list(client) print(prompts)  # Get a specific prompt prompt <- prompts_get(client, \"example-prompt\") print(prompt)"},{"path":"https://mcpr.opifex.org/articles/client-usage.html","id":"working-with-resources","dir":"Articles","previous_headings":"Basic Client Operations","what":"Working with Resources","title":"Using the MCP Client","text":"can also access resources provided server:","code":"# List available resources resources <- resources_list(client) print(resources)  # Read a specific resource resource_content <- resources_read(client, \"example-resource\") print(resource_content)"},{"path":"https://mcpr.opifex.org/articles/client-usage.html","id":"complete-example","dir":"Articles","previous_headings":"","what":"Complete Example","title":"Using the MCP Client","text":"’s complete example demonstrates connecting calculator server performing operations:","code":"# Create a client client <- new_client(   \"Rscript\",   system.file(\"examples/calculator/server.R\", package = \"mcpr\"),   name = \"calculator\",   version = \"1.0.0\" )  # Initialize the connection initialize(client)  # List available tools tools <- tools_list(client) print(tools)  # Call the math_calculator tool with different operations add_result <- tools_call(   client,   name = \"math_calculator\",   params = list(     operation = \"add\",     a = 10,     b = 5   ) ) print(add_result)  multiply_result <- tools_call(   client,   name = \"math_calculator\",   params = list(     operation = \"multiply\",     a = 10,     b = 5   ) ) print(multiply_result)"},{"path":"https://mcpr.opifex.org/articles/client-usage.html","id":"practical-use-cases","dir":"Articles","previous_headings":"","what":"Practical Use Cases","title":"Using the MCP Client","text":"MCP clients can used various scenarios: Integration External AI Services: Connect AI models services expose MCP interface Microservices Architecture: Communicate different R services using MCP protocol Testing MCP Servers: Verify MCP server implementations work correctly Building UI Applications: Create user interfaces interact MCP servers provide functionality","code":""},{"path":"https://mcpr.opifex.org/articles/client-usage.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Using the MCP Client","text":"MCP client functionality mcpr package provides flexible way interact MCP servers R. Whether ’re building applications consume AI capabilities creating distributed systems communicate via MCP, client interface makes easy work protocol. advanced usage, check function documentation vignettes.","code":""},{"path":"https://mcpr.opifex.org/articles/get-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with mcpr","text":"mcpr package allows create Model Context Protocol (MCP) servers R. vignette guide building simple MCP server basic addition tool.","code":""},{"path":"https://mcpr.opifex.org/articles/get-started.html","id":"creating-a-simple-mcp-server","dir":"Articles","previous_headings":"","what":"Creating a Simple MCP Server","title":"Getting Started with mcpr","text":"Let’s create simple MCP server can add two numbers:","code":"# Create a new MCP server mcp_server <- new_server(   name = \"Simple Adder\",   description = \"A basic MCP server that adds two numbers\",   version = \"1.0.0\" )  # Create a simple addition tool add_tool <- new_tool(   name = \"add\",   description = \"Adds two numbers together\",   input_schema = schema(     properties = list(       a = property_number(\"First number\", \"First number to add\", required = TRUE),       b = property_number(\"Second number\", \"Second number to add\", required = TRUE)     )   ),   handler = function(input) {     result <- input$a + input$b     response_text(paste(\"The sum is:\", result))   } )  # Add the tool to the server mcp_server <- add_capability(mcp_server, add_tool)"},{"path":"https://mcpr.opifex.org/articles/get-started.html","id":"using-standard-inputoutput","dir":"Articles","previous_headings":"","what":"Using Standard Input/Output","title":"Getting Started with mcpr","text":"simplest way interact MCP server standard input/output using serve_io function: run serve_io(mcp_server), R session wait input JSON-RPC 2.0 format. can communicate server sending JSON-RPC requests.","code":"# Start the server using standard input/output serve_io(mcp_server)"},{"path":"https://mcpr.opifex.org/articles/get-started.html","id":"testing-the-server","dir":"Articles","previous_headings":"","what":"Testing the Server","title":"Getting Started with mcpr","text":"test server, can run code R script interact using command line. example: Save code file named mcp_adder.R Run command line: Rscript mcp_adder.R Send JSON-RPC request standard input: server respond :","code":"{\"jsonrpc\": \"2.0\", \"id\": 123, \"method\": \"tools/call\", \"params\": {\"name\": \"add\", \"arguments\": {\"a\": 15, \"b\": 27}}} {\"jsonrpc\": \"2.0\", \"id\": 123, \"result\": {\"content\": [{\"type\": \"text\", \"text\": \"The sum is: 42\"}]}}"},{"path":"https://mcpr.opifex.org/articles/get-started.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Getting Started with mcpr","text":"’re comfortable basics, can: Add complex tools different operations Create resources serve data Implement prompts text generation See vignettes function documentation details advanced features.","code":""},{"path":"https://mcpr.opifex.org/articles/practical-examples.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Practical MCP Examples with R","text":"Model Context Protocol (MCP) enables AI models interact R code. vignette showcases several practical examples MCP tools leverage R’s statistical data manipulation capabilities.","code":""},{"path":"https://mcpr.opifex.org/articles/practical-examples.html","id":"example-1-statistical-analysis-tool","dir":"Articles","previous_headings":"","what":"Example 1: Statistical Analysis Tool","title":"Practical MCP Examples with R","text":"example creates MCP tool performs basic statistical analysis numeric data:","code":"# Create a statistical analysis MCP server stats_server <- new_server(   name = \"r-statistics\",   description = \"Statistical analysis tools using R\",   version = \"1.0.0\" )  # Create a summary statistics tool summary_stats <- new_tool(   name = \"summary_statistics\",   description = \"Calculate summary statistics for a numeric vector\",   input_schema = schema(     properties = properties(       data = property_array(         \"Data\",          \"Numeric vector to analyze\",         items = property_number(\"Value\", \"A numeric value\"),         required = TRUE       ),       include_quantiles = property_boolean(         \"Include Quantiles\",          \"Whether to include quantiles in the results\",         default = FALSE       )     )   ),   handler = function(input) {     # Convert input to numeric vector     data <- unlist(input$data)          # Calculate basic statistics     stats <- list(       n = length(data),       mean = mean(data, na.rm = TRUE),       median = median(data, na.rm = TRUE),       sd = sd(data, na.rm = TRUE),       min = min(data, na.rm = TRUE),       max = max(data, na.rm = TRUE)     )          # Add quantiles if requested     if (input$include_quantiles) {       stats$quantiles <- as.list(quantile(data,                                           probs = c(0.25, 0.5, 0.75),                                           na.rm = TRUE))     }          # Format the results as text     result_text <- paste0(       \"Summary Statistics:\\n\",       \"- n: \", stats$n, \"\\n\",       \"- Mean: \", round(stats$mean, 4), \"\\n\",       \"- Median: \", round(stats$median, 4), \"\\n\",       \"- Standard Deviation: \", round(stats$sd, 4), \"\\n\",       \"- Min: \", round(stats$min, 4), \"\\n\",       \"- Max: \", round(stats$max, 4)     )          if (input$include_quantiles) {       result_text <- paste0(         result_text, \"\\n\",         \"- 25th Percentile: \", round(stats$quantiles[[1]], 4), \"\\n\",         \"- 50th Percentile: \", round(stats$quantiles[[2]], 4), \"\\n\",         \"- 75th Percentile: \", round(stats$quantiles[[3]], 4)       )     }          response_text(result_text)   } )  # Add the tool to the server stats_server <- add_capability(stats_server, summary_stats)"},{"path":"https://mcpr.opifex.org/articles/practical-examples.html","id":"example-2-data-visualization-resource","dir":"Articles","previous_headings":"","what":"Example 2: Data Visualization Resource","title":"Practical MCP Examples with R","text":"example creates MCP resource generates visualizations data:","code":"# Load required packages library(ggplot2)  # Create visualization server viz_server <- new_server(   name = \"r-visualizations\",   description = \"Data visualization tools using R\",   version = \"1.0.0\" )  # Create a scatter plot tool scatter_plot <- new_tool(   name = \"scatter_plot\",   description = \"Create a scatter plot from x and y coordinates\",   input_schema = schema(     properties = properties(       x = property_array(         \"X values\",          \"X-axis coordinates\",         items = property_number(\"X value\", \"A numeric value\"),         required = TRUE       ),       y = property_array(         \"Y values\",          \"Y-axis coordinates\",         items = property_number(\"Y value\", \"A numeric value\"),         required = TRUE       ),       title = property_string(         \"Plot title\",         \"Title for the plot\",         default = \"Scatter Plot\"       ),       x_label = property_string(         \"X-axis label\",         \"Label for the x-axis\",         default = \"X\"       ),       y_label = property_string(         \"Y-axis label\",         \"Label for the y-axis\",         default = \"Y\"       )     )   ),   handler = function(input) {     # Check that x and y have the same length     x <- unlist(input$x)     y <- unlist(input$y)          if (length(x) != length(y)) {       return(response_error(\"X and Y arrays must have the same length\"))     }          # Create a data frame for ggplot     plot_data <- data.frame(x = x, y = y)          # Create a temporary file for the plot     # Note: In a production environment, consider file cleanup strategies     # that don't risk deleting files before clients can access them     temp_file <- tempfile(fileext = \".png\")          # Create the plot using ggplot2     p <- ggplot(plot_data, aes(x = x, y = y)) +       geom_point(color = \"steelblue\", size = 3) +       labs(         title = input$title,         x = input$x_label,         y = input$y_label       ) +       theme_minimal()          # Save the plot to the temporary file     ggsave(temp_file, p, width = 8, height = 6, dpi = 100)          # Return the image     # The application should handle cleanup of temporary files     # based on its specific file management strategy     response_image(temp_file)   } )  # Add the tool to the server viz_server <- add_capability(viz_server, scatter_plot)"},{"path":"https://mcpr.opifex.org/articles/practical-examples.html","id":"example-3-natural-language-processing","dir":"Articles","previous_headings":"","what":"Example 3: Natural Language Processing","title":"Practical MCP Examples with R","text":"example demonstrates create MCP tool text analysis:","code":"# Create an NLP server nlp_server <- new_server(   name = \"r-text-analysis\",   description = \"Text analysis tools using R\",   version = \"1.0.0\" )  # Create a text summary tool text_analyzer <- new_tool(   name = \"text_analyzer\",   description = \"Analyze text to extract basic metrics\",   input_schema = schema(     properties = properties(       text = property_string(         \"Text\",          \"Text content to analyze\",         required = TRUE       )     )   ),   handler = function(input) {     # Extract text from input     text <- input$text          # Calculate basic text metrics     char_count <- nchar(text)     word_count <- length(unlist(strsplit(text, \"\\\\s+\")))     sentence_count <- length(unlist(strsplit(text, \"[.!?]\\\\s*\")))          # Calculate word frequencies     words <- tolower(unlist(strsplit(text, \"\\\\W+\")))     words <- words[words != \"\"]     word_freq <- sort(table(words), decreasing = TRUE)          # Get top 5 words     top_words <- head(word_freq, 5)     top_words_text <- paste(names(top_words), \"(\", top_words, \")\",                             collapse = \", \")          # Format the results     result <- paste0(       \"Text Analysis:\\n\",       \"- Character count: \", char_count, \"\\n\",       \"- Word count: \", word_count, \"\\n\",       \"- Sentence count: \", sentence_count, \"\\n\",       \"- Unique words: \", length(word_freq), \"\\n\",       \"- Top 5 words: \", top_words_text     )          response_text(result)   } )  # Add the tool to the server nlp_server <- add_capability(nlp_server, text_analyzer)"},{"path":"https://mcpr.opifex.org/articles/practical-examples.html","id":"example-4-time-series-forecasting","dir":"Articles","previous_headings":"","what":"Example 4: Time Series Forecasting","title":"Practical MCP Examples with R","text":"example creates MCP tool simple time series forecasting:","code":"# Create a forecasting server forecast_server <- new_server(   name = \"r-forecasting\",   description = \"Time series forecasting tools using R\",   version = \"1.0.0\" )  # Create a simple forecasting tool simple_forecast <- new_tool(   name = \"simple_forecast\",   description = \"Forecast future values based on historical time series data\",   input_schema = schema(     properties = properties(       values = property_array(         \"Historical values\",          \"Historical time series values\",         items = property_number(\"Value\", \"A numeric value\"),         required = TRUE       ),       periods = property_number(         \"Forecast periods\",         \"Number of periods to forecast\",         default = 5,         minimum = 1,         maximum = 50       ),       method = property_enum(         \"Forecast method\",         \"Method to use for forecasting\",         enum = c(\"mean\", \"naive\", \"drift\", \"exponential\"),         default = \"exponential\"       )     )   ),   handler = function(input) {     # Extract inputs     values <- unlist(input$values)     periods <- input$periods     method <- input$method          # Apply the selected forecasting method     forecast_values <- switch(       method,       \"mean\" = {         rep(mean(values), periods)       },       \"naive\" = {         rep(tail(values, 1), periods)       },       \"drift\" = {         last_value <- tail(values, 1)         avg_change <- (last_value - values[1]) / (length(values) - 1)         last_value + (1:periods) * avg_change       },       \"exponential\" = {         # Simple exponential smoothing         alpha <- 0.3  # smoothing parameter         level <- values[1]         for (i in 2:length(values)) {           level <- alpha * values[i] + (1 - alpha) * level         }         rep(level, periods)       }     )          # Format the results     forecast_text <- paste(       \"Forecast for next\", periods, \"periods using\", method, \"method:\",       paste(round(forecast_values, 2), collapse = \", \")     )          # Create a plot of historical + forecast values using ggplot2     # Note: In a production environment, consider file cleanup strategies     # that don't risk deleting files before clients can access them     temp_file <- tempfile(fileext = \".png\")          # Prepare data for ggplot     # Create a data frame with historical and forecast data     n_hist <- length(values)     n_forecast <- length(forecast_values)          plot_data <- data.frame(       time = 1:(n_hist + n_forecast),       value = c(values, forecast_values),       type = c(rep(\"Historical\", n_hist), rep(\"Forecast\", n_forecast))     )          # Create the plot using ggplot2     p <- ggplot(plot_data, aes(x = time, y = value, color = type, linetype = type)) +       geom_line(size = 1) +       scale_color_manual(values = c(\"Historical\" = \"black\", \"Forecast\" = \"blue\")) +       scale_linetype_manual(values = c(\"Historical\" = \"solid\", \"Forecast\" = \"dashed\")) +       labs(         title = paste(\"Time Series Forecast (\", method, \")\"),         x = \"Time Period\",         y = \"Value\",         color = \"Data Type\",         linetype = \"Data Type\"       ) +       theme_minimal() +       theme(legend.position = \"top\")          # Save the plot to the temporary file     ggsave(temp_file, p, width = 8, height = 6, dpi = 100)          # Return both text and image     # The application should handle cleanup of temporary files     # based on its specific file management strategy     response(list(       response_text(forecast_text),       response_image(temp_file)     ))   } )  # Add the tool to the server forecast_server <- add_capability(forecast_server, simple_forecast)"},{"path":"https://mcpr.opifex.org/articles/practical-examples.html","id":"example-5-machine-learning-classification","dir":"Articles","previous_headings":"","what":"Example 5: Machine Learning Classification","title":"Practical MCP Examples with R","text":"example demonstrates simple machine learning classification tool:","code":"# Create an ML server ml_server <- new_server(   name = \"r-machine-learning\",   description = \"Machine learning tools using R\",   version = \"1.0.0\" )  # Create a simple classifier tool simple_classifier <- new_tool(   name = \"simple_classifier\",   description = \"Train a simple classifier and make predictions\",   input_schema = schema(     properties = properties(       features = property_array(         \"Training features\",          \"Features for training (list of feature vectors)\",         items = property_array(           \"Feature vector\",           \"Vector of features for a single instance\",           items = property_number(\"Feature\", \"Feature value\")         ),         required = TRUE       ),       labels = property_array(         \"Training labels\",         \"Labels for training data (0 or 1)\",         items = property_number(           \"Label\",           \"Class label (0 or 1)\"         ),         required = TRUE       ),       test_features = property_array(         \"Test features\",         \"Features for prediction\",         items = property_array(           \"Feature vector\",           \"Vector of features for a single instance\",           items = property_number(\"Feature\", \"Feature value\")         ),         required = TRUE       ),       method = property_enum(         \"Classification method\",         \"Method to use for classification\",         enum = c(\"logistic\", \"lda\"),         default = \"logistic\"       )     )   ),   handler = function(input) {     # Process input data     features <- lapply(input$features, unlist)     labels <- unlist(input$labels)     test_features <- lapply(input$test_features, unlist)     method <- input$method          # Check that all feature vectors have the same length     feature_lengths <- sapply(features, length)     if (length(unique(feature_lengths)) != 1) {       return(response_error(\"All feature vectors must have the same length\"))     }          test_feature_lengths <- sapply(test_features, length)     if (any(test_feature_lengths != feature_lengths[1])) {       return(response_error(\"Test features must have the same dimensions as training features\"))     }          # Create a training data frame     train_df <- as.data.frame(do.call(rbind, features))     colnames(train_df) <- paste0(\"X\", 1:ncol(train_df))     train_df$y <- as.factor(labels)          # Create a test data frame     test_df <- as.data.frame(do.call(rbind, test_features))     colnames(test_df) <- paste0(\"X\", 1:ncol(test_df))          # Train a model based on the selected method     if (method == \"logistic\") {       formula <- as.formula(paste(\"y ~\", paste(colnames(train_df)[colnames(train_df) != \"y\"], collapse = \" + \")))       model <- glm(formula, data = train_df, family = \"binomial\")              # Make predictions       pred_probs <- predict(model, test_df, type = \"response\")       predictions <- ifelse(pred_probs > 0.5, 1, 0)            } else if (method == \"lda\") {       # Use simple implementation to avoid additional dependencies       # Calculate means for each class       means_class0 <- colMeans(train_df[train_df$y == 0, colnames(train_df) != \"y\", drop = FALSE])       means_class1 <- colMeans(train_df[train_df$y == 1, colnames(train_df) != \"y\", drop = FALSE])              # Calculate pooled covariance matrix       n0 <- sum(train_df$y == 0)       n1 <- sum(train_df$y == 1)              # Make predictions using distance to means       predictions <- numeric(nrow(test_df))       for (i in 1:nrow(test_df)) {         dist0 <- sum((as.numeric(test_df[i,]) - means_class0)^2)         dist1 <- sum((as.numeric(test_df[i,]) - means_class1)^2)         predictions[i] <- ifelse(dist0 < dist1, 0, 1)       }     }          # Format results     result_text <- paste(       \"Classification results using\", method, \"method:\\n\",       \"Predictions:\", paste(predictions, collapse = \", \")     )          response_text(result_text)   } )  # Add the tool to the server ml_server <- add_capability(ml_server, simple_classifier)"},{"path":"https://mcpr.opifex.org/articles/practical-examples.html","id":"running-these-examples","dir":"Articles","previous_headings":"","what":"Running These Examples","title":"Practical MCP Examples with R","text":"run examples, save code R script add appropriate serve_io() serve_http() call end: follow client integration instructions “Integrating mcpr MCP Clients” vignette.","code":"# For CLI-based tools (Claude Code, Cursor, etc.) serve_io(your_server)  # For HTTP-based tools (OpenAI, LangChain, etc.) serve_http(your_server, port = 8080)"},{"path":"https://mcpr.opifex.org/articles/practical-examples.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Practical MCP Examples with R","text":"examples demonstrate R’s powerful statistical, visualization, machine learning capabilities can exposed AI systems Model Context Protocol. creating specialized MCP tools, can enhance AI applications R’s unique strengths. advanced usage, consider: Combining multiple tools single server Adding error handling input validation Creating complex responses multiple content types Leveraging R packages specialized domains See package documentation details advanced features.","code":""},{"path":"https://mcpr.opifex.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John Coene. Author, maintainer. Opifex. Copyright holder, funder.","code":""},{"path":"https://mcpr.opifex.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Coene J (2025). mcpr: Model Context Protocol R. R package version 0.0.1.9000, https://mcpr.opifex.org/.","code":"@Manual{,   title = {mcpr: Model Context Protocol for R},   author = {John Coene},   year = {2025},   note = {R package version 0.0.1.9000},   url = {https://mcpr.opifex.org/}, }"},{"path":"https://mcpr.opifex.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Context Protocol for R","text":"can install mcpr GitHub using pak package:","code":"pak::pkg_install(\"devOpifex/mcpr\")"},{"path":[]},{"path":"https://mcpr.opifex.org/index.html","id":"server","dir":"","previous_headings":"Basic Usage","what":"Server","title":"Model Context Protocol for R","text":"’s simple example creates MCP server calculator tool: can return multiple responses returning list response objects: can also serve via HTTP transport serve_http. See Get Started guide information.","code":"library(mcpr)  calculator <- new_tool(   name = \"calculator\",   description = \"Performs basic arithmetic operations\",   input_schema = schema(     properties = properties(       operation = property_enum(         \"Operation\",          \"Math operation to perform\",          values = c(\"add\", \"subtract\", \"multiply\", \"divide\"),         required = TRUE       ),       a = property_number(\"First number\", \"First operand\", required = TRUE),       b = property_number(\"Second number\", \"Second operand\", required = TRUE)     )   ),   handler = function(params) {     result <- switch(params$operation,       \"add\" = params$a + params$b,       \"subtract\" = params$a - params$b,       \"multiply\" = params$a * params$b,       \"divide\" = params$a / params$b     )      response_text(result)   } )  mcp <- new_mcp(   name = \"R Calculator Server\",   description = \"A simple calculator server implemented in R\",   version = \"1.0.0\" )  mcp <- add_capability(mcp, calculator)  serve_io(mcp) response(   response_text(\"Hello, world!\"),   response_image(system.file(\"extdata/logo.png\", package = \"mcpr\")),   response_audio(system.file(\"extdata/sound.mp3\", package = \"mcpr\")),   response_video(system.file(\"extdata/video.mp4\", package = \"mcpr\")),   response_file(system.file(\"extdata/file.txt\", package = \"mcpr\")),   response_resource(system.file(\"extdata/resource.json\", package = \"mcpr\")) )"},{"path":"https://mcpr.opifex.org/index.html","id":"client","dir":"","previous_headings":"Basic Usage","what":"Client","title":"Model Context Protocol for R","text":"’s simple example using client interact MCP server:","code":"library(mcpr)  # Create a client that connects to an MCP server client <- new_client(\"http://localhost:8080\")  # List available tools tools <- tools_list(client) print(tools)  # Call a tool result <- tools_call(   client,   name = \"calculator\",   params = list(     operation = \"add\",     a = 5,     b = 3   ) ) print(result)  # List available prompts prompts <- prompts_list(client) print(prompts)  # List available resources resources <- resources_list(client) print(resources)  # Read a resource resource_content <- resources_read(client, \"example-resource\") print(resource_content)"},{"path":[]},{"path":"https://mcpr.opifex.org/index.html","id":"claude-code-integration","dir":"","previous_headings":"Using mcpr","what":"Claude Code Integration","title":"Model Context Protocol for R","text":"use MCP server Claude Code, see documentation","code":"claude mcp add r-calculator -- Rscript /path/to/calculator_server.R"},{"path":"https://mcpr.opifex.org/index.html","id":"cursor-integration","dir":"","previous_headings":"Using mcpr","what":"Cursor Integration","title":"Model Context Protocol for R","text":"integrate Cursor see documentation","code":"{   \"customCommands\": {     \"r-calculator\": {       \"command\": \"Rscript 'path/to/calculator_server.R'\"     }   } }"},{"path":"https://mcpr.opifex.org/index.html","id":"vs-code-agent-mode-integration","dir":"","previous_headings":"Using mcpr","what":"VS Code Agent Mode Integration","title":"Model Context Protocol for R","text":"integrate VS Code Agent mode see documentation integrations docs","code":"\"mcp\": {         \"servers\": {             \"my-mcp-server-calculator\": {                 \"type\": \"stdio\",                 \"command\": \"Rscript\",                 \"args\": [                     \"path/to/calculator_server.R\"                 ]             } }"},{"path":"https://mcpr.opifex.org/reference/JSONRPC_PARSE_ERROR.html","id":null,"dir":"Reference","previous_headings":"","what":"JSON-RPC 2.0 Standard Error Codes — JSONRPC_PARSE_ERROR","title":"JSON-RPC 2.0 Standard Error Codes — JSONRPC_PARSE_ERROR","text":"JSON-RPC 2.0 Standard Error Codes","code":""},{"path":"https://mcpr.opifex.org/reference/JSONRPC_PARSE_ERROR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JSON-RPC 2.0 Standard Error Codes — JSONRPC_PARSE_ERROR","text":"","code":"JSONRPC_PARSE_ERROR"},{"path":"https://mcpr.opifex.org/reference/JSONRPC_PARSE_ERROR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JSON-RPC 2.0 Standard Error Codes — JSONRPC_PARSE_ERROR","text":"object class numeric length 1.","code":""},{"path":"https://mcpr.opifex.org/reference/add_capability.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a capability to an MCP object — add_capability","title":"Add a capability to an MCP object — add_capability","text":"Add capability MCP object","code":""},{"path":"https://mcpr.opifex.org/reference/add_capability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a capability to an MCP object — add_capability","text":"","code":"add_capability(mcp, capability)"},{"path":"https://mcpr.opifex.org/reference/add_capability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a capability to an MCP object — add_capability","text":"mcp MCP object capability capability object","code":""},{"path":"https://mcpr.opifex.org/reference/add_capability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a capability to an MCP object — add_capability","text":"MCP object capability added","code":""},{"path":"https://mcpr.opifex.org/reference/create_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a JSON-RPC 2.0 error response — create_error","title":"Create a JSON-RPC 2.0 error response — create_error","text":"Create JSON-RPC 2.0 error response","code":""},{"path":"https://mcpr.opifex.org/reference/create_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a JSON-RPC 2.0 error response — create_error","text":"","code":"create_error(code, message, data = NULL, id = NULL)"},{"path":"https://mcpr.opifex.org/reference/create_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a JSON-RPC 2.0 error response — create_error","text":"code Error code message Error message data Optional error data id Request identifier","code":""},{"path":"https://mcpr.opifex.org/reference/create_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a JSON-RPC 2.0 error response — create_error","text":"structured JSON-RPC 2.0 error response","code":""},{"path":"https://mcpr.opifex.org/reference/create_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a JSON-RPC 2.0 success response — create_response","title":"Create a JSON-RPC 2.0 success response — create_response","text":"Create JSON-RPC 2.0 success response","code":""},{"path":"https://mcpr.opifex.org/reference/create_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a JSON-RPC 2.0 success response — create_response","text":"","code":"create_response(result, id = NULL)"},{"path":"https://mcpr.opifex.org/reference/create_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a JSON-RPC 2.0 success response — create_response","text":"result Result data id Request identifier","code":""},{"path":"https://mcpr.opifex.org/reference/create_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a JSON-RPC 2.0 success response — create_response","text":"structured JSON-RPC 2.0 success response","code":""},{"path":"https://mcpr.opifex.org/reference/from_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse JSON to an R object — from_json","title":"Parse JSON to an R object — from_json","text":"Parse JSON R object","code":""},{"path":"https://mcpr.opifex.org/reference/from_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse JSON to an R object — from_json","text":"","code":"from_json(json, ...)"},{"path":"https://mcpr.opifex.org/reference/from_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse JSON to an R object — from_json","text":"json JSON string parse ... Additional arguments passed jsonlite::fromJSON","code":""},{"path":"https://mcpr.opifex.org/reference/from_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse JSON to an R object — from_json","text":"R object","code":""},{"path":"https://mcpr.opifex.org/reference/initialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize the server with protocol information — initialize","title":"Initialize the server with protocol information — initialize","text":"Initialize server protocol information","code":""},{"path":"https://mcpr.opifex.org/reference/initialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize the server with protocol information — initialize","text":"","code":"initialize(mcp)"},{"path":"https://mcpr.opifex.org/reference/initialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize the server with protocol information — initialize","text":"mcp server object","code":""},{"path":"https://mcpr.opifex.org/reference/initialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize the server with protocol information — initialize","text":"list containing protocol version, server info, capabilities","code":""},{"path":"https://mcpr.opifex.org/reference/new_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new mcp client — new_client","title":"Create a new mcp client — new_client","text":"Create new mcp client","code":""},{"path":"https://mcpr.opifex.org/reference/new_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new mcp client — new_client","text":"","code":"new_client(command, args = character(), name = command, version = \"1.0.0\")"},{"path":"https://mcpr.opifex.org/reference/new_client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new mcp client — new_client","text":"command command run args Arguments pass command name name client version version client","code":""},{"path":"https://mcpr.opifex.org/reference/new_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new mcp client — new_client","text":"new mcp client","code":""},{"path":"https://mcpr.opifex.org/reference/new_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new prompt — new_prompt","title":"Create a new prompt — new_prompt","text":"Create new prompt","code":""},{"path":"https://mcpr.opifex.org/reference/new_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new prompt — new_prompt","text":"","code":"new_prompt(name, description, arguments = list(), handler)"},{"path":"https://mcpr.opifex.org/reference/new_prompt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new prompt — new_prompt","text":"name Name prompt description Description prompt arguments List arguments prompt handler Function handle prompt","code":""},{"path":"https://mcpr.opifex.org/reference/new_prompt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new prompt — new_prompt","text":"new prompt capability","code":""},{"path":"https://mcpr.opifex.org/reference/new_prompt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new prompt — new_prompt","text":"","code":"prompt <- new_prompt(   name = \"My Prompt\",   description = \"This is a description\",   arguments = list(     input1 = list(       type = \"string\",       description = \"Input 1\"     ),     input2 = list(       type = \"number\",       description = \"Input 2\"     )   ),   handler = function(params) {     # Process the prompt request     return(list(text = \"Generated text from prompt\"))   } )"},{"path":"https://mcpr.opifex.org/reference/new_property.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new property — new_property","title":"Create a new property — new_property","text":"Create new property","code":""},{"path":"https://mcpr.opifex.org/reference/new_property.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new property — new_property","text":"","code":"new_property(type, title, description, required = FALSE, ...)"},{"path":"https://mcpr.opifex.org/reference/new_property.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new property — new_property","text":"type Type property title Short title property description Longer description property required Whether property required ... Additional attributes property","code":""},{"path":"https://mcpr.opifex.org/reference/new_property.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new property — new_property","text":"property object specified attributes","code":""},{"path":"https://mcpr.opifex.org/reference/new_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new resource — new_resource","title":"Create a new resource — new_resource","text":"Create new resource","code":""},{"path":"https://mcpr.opifex.org/reference/new_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new resource — new_resource","text":"","code":"new_resource(name, description, uri, mime_type = NULL, handler)"},{"path":"https://mcpr.opifex.org/reference/new_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new resource — new_resource","text":"name Name resource description Description resource uri URI resource mime_type Mime type resource handler Function handle resource","code":""},{"path":"https://mcpr.opifex.org/reference/new_resource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new resource — new_resource","text":"new resource capability","code":""},{"path":"https://mcpr.opifex.org/reference/new_resource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new resource — new_resource","text":"","code":"resource <- new_resource(   name = \"My Resource\",   description = \"This is a description\",   uri = \"https://example.com/resource\",   mime_type = \"text/plain\",   handler = function(params) {     # Process the resource request     return(list(content = \"Resource content\"))   } )"},{"path":"https://mcpr.opifex.org/reference/new_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new MCP object — new_server","title":"Create a new MCP object — new_server","text":"Create new MCP object","code":""},{"path":"https://mcpr.opifex.org/reference/new_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new MCP object — new_server","text":"","code":"new_server(   name,   description,   version,   tools = list(),   resources = list(),   prompts = list() )  new_mcp(...)"},{"path":"https://mcpr.opifex.org/reference/new_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new MCP object — new_server","text":"name Name MCP description Description MCP version Version MCP tools List tools resources List resources prompts List prompts ... Forwarded new_server()","code":""},{"path":"https://mcpr.opifex.org/reference/new_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new MCP object — new_server","text":"new MCP object","code":""},{"path":"https://mcpr.opifex.org/reference/new_server.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new MCP object — new_server","text":"","code":"mcp <- new_server(   name = \"My MCP\",   description = \"This is a description\",   version = \"1.0.0\" )"},{"path":"https://mcpr.opifex.org/reference/new_tool.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new tool — new_tool","title":"Create a new tool — new_tool","text":"Create new tool","code":""},{"path":"https://mcpr.opifex.org/reference/new_tool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new tool — new_tool","text":"","code":"new_tool(name, description, input_schema, handler)"},{"path":"https://mcpr.opifex.org/reference/new_tool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new tool — new_tool","text":"name Name tool description Description tool input_schema Input schema tool handler Function handle tool","code":""},{"path":"https://mcpr.opifex.org/reference/new_tool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new tool — new_tool","text":"new tool capability","code":""},{"path":"https://mcpr.opifex.org/reference/new_tool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new tool — new_tool","text":"","code":"tool <- new_tool(   name = \"My Tool\",   description = \"This is a description\",   input_schema = schema(     properties = list(       input1 = property_string(\"Input 1\", \"Description of input 1\"),       input2 = property_number(\"Input 2\", \"Description of input 2\")     )   ),   handler = function(input) {     # Process the input here     return(input)   } )"},{"path":"https://mcpr.opifex.org/reference/parse_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse and process a JSON-RPC 2.0 request — parse_request","title":"Parse and process a JSON-RPC 2.0 request — parse_request","text":"Parse process JSON-RPC 2.0 request","code":""},{"path":"https://mcpr.opifex.org/reference/parse_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse and process a JSON-RPC 2.0 request — parse_request","text":"","code":"parse_request(json_text, mcp)"},{"path":"https://mcpr.opifex.org/reference/parse_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse and process a JSON-RPC 2.0 request — parse_request","text":"json_text JSON request text mcp MCP server object","code":""},{"path":"https://mcpr.opifex.org/reference/parse_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse and process a JSON-RPC 2.0 request — parse_request","text":"JSON response text NULL notifications","code":""},{"path":"https://mcpr.opifex.org/reference/process_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Process batch JSON-RPC 2.0 requests — process_batch","title":"Process batch JSON-RPC 2.0 requests — process_batch","text":"Process batch JSON-RPC 2.0 requests","code":""},{"path":"https://mcpr.opifex.org/reference/process_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process batch JSON-RPC 2.0 requests — process_batch","text":"","code":"process_batch(batch_requests, mcp)"},{"path":"https://mcpr.opifex.org/reference/process_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process batch JSON-RPC 2.0 requests — process_batch","text":"batch_requests List request objects mcp MCP server object","code":""},{"path":"https://mcpr.opifex.org/reference/process_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process batch JSON-RPC 2.0 requests — process_batch","text":"List response objects","code":""},{"path":"https://mcpr.opifex.org/reference/process_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Process a JSON-RPC 2.0 request — process_request","title":"Process a JSON-RPC 2.0 request — process_request","text":"Process JSON-RPC 2.0 request","code":""},{"path":"https://mcpr.opifex.org/reference/process_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process a JSON-RPC 2.0 request — process_request","text":"","code":"process_request(request, mcp)"},{"path":"https://mcpr.opifex.org/reference/process_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process a JSON-RPC 2.0 request — process_request","text":"request Parsed request object mcp MCP server object","code":""},{"path":"https://mcpr.opifex.org/reference/process_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process a JSON-RPC 2.0 request — process_request","text":"Response object NULL notifications","code":""},{"path":"https://mcpr.opifex.org/reference/prompts_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a prompt with the given parameters — prompts_get","title":"Get a prompt with the given parameters — prompts_get","text":"Get prompt given parameters","code":""},{"path":"https://mcpr.opifex.org/reference/prompts_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a prompt with the given parameters — prompts_get","text":"","code":"prompts_get(mcp, params, id = NULL)"},{"path":"https://mcpr.opifex.org/reference/prompts_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a prompt with the given parameters — prompts_get","text":"mcp server object params Parameters prompt request id Optional request ID response tracking","code":""},{"path":"https://mcpr.opifex.org/reference/prompts_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a prompt with the given parameters — prompts_get","text":"response object prompt results error","code":""},{"path":"https://mcpr.opifex.org/reference/prompts_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List all available prompts — prompts_list","title":"List all available prompts — prompts_list","text":"List available prompts","code":""},{"path":"https://mcpr.opifex.org/reference/prompts_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all available prompts — prompts_list","text":"","code":"prompts_list(mcp)"},{"path":"https://mcpr.opifex.org/reference/prompts_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all available prompts — prompts_list","text":"mcp server object","code":""},{"path":"https://mcpr.opifex.org/reference/prompts_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all available prompts — prompts_list","text":"list containing available prompts","code":""},{"path":"https://mcpr.opifex.org/reference/properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new properties list — properties","title":"Create a new properties list — properties","text":"Create new properties list","code":""},{"path":"https://mcpr.opifex.org/reference/properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new properties list — properties","text":"","code":"properties(...)"},{"path":"https://mcpr.opifex.org/reference/properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new properties list — properties","text":"... Property objects","code":""},{"path":"https://mcpr.opifex.org/reference/properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new properties list — properties","text":"list property objects","code":""},{"path":"https://mcpr.opifex.org/reference/properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new properties list — properties","text":"","code":"properties <- properties(   property_string(\"Name\", \"The name of the user\", required = TRUE),   property_number(\"Age\", \"The age of the user in years\", minimum = 0) )"},{"path":"https://mcpr.opifex.org/reference/property_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an array property definition — property_array","title":"Create an array property definition — property_array","text":"Create array property definition","code":""},{"path":"https://mcpr.opifex.org/reference/property_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an array property definition — property_array","text":"","code":"property_array(   title,   description,   items,   required = FALSE,   min_items = NULL,   max_items = NULL,   unique_items = FALSE )"},{"path":"https://mcpr.opifex.org/reference/property_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an array property definition — property_array","text":"title Short title property description Longer description property items Schema items array required Whether property required min_items Optional minimum number items max_items Optional maximum number items unique_items Logical indicating items must unique","code":""},{"path":"https://mcpr.opifex.org/reference/property_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an array property definition — property_array","text":"array property object","code":""},{"path":"https://mcpr.opifex.org/reference/property_array.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an array property definition — property_array","text":"","code":"tags_prop <- property_array(   \"Tags\",   \"List of tags for the user\",   items = property_string(\"Tag\", \"A user tag\"),   unique_items = TRUE )"},{"path":"https://mcpr.opifex.org/reference/property_boolean.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a boolean property definition — property_boolean","title":"Create a boolean property definition — property_boolean","text":"Create boolean property definition","code":""},{"path":"https://mcpr.opifex.org/reference/property_boolean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a boolean property definition — property_boolean","text":"","code":"property_boolean(title, description, required = FALSE)"},{"path":"https://mcpr.opifex.org/reference/property_boolean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a boolean property definition — property_boolean","text":"title Short title property description Longer description property required Whether property required","code":""},{"path":"https://mcpr.opifex.org/reference/property_boolean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a boolean property definition — property_boolean","text":"boolean property object","code":""},{"path":"https://mcpr.opifex.org/reference/property_boolean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a boolean property definition — property_boolean","text":"","code":"active_prop <- property_boolean(   \"Active status\",   \"Whether the user account is active\",   required = TRUE )"},{"path":"https://mcpr.opifex.org/reference/property_enum.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an enum property with predefined values — property_enum","title":"Create an enum property with predefined values — property_enum","text":"Create enum property predefined values","code":""},{"path":"https://mcpr.opifex.org/reference/property_enum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an enum property with predefined values — property_enum","text":"","code":"property_enum(title, description, values, required = FALSE)"},{"path":"https://mcpr.opifex.org/reference/property_enum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an enum property with predefined values — property_enum","text":"title Short title property description Longer description property values Character vector allowed values required Whether property required","code":""},{"path":"https://mcpr.opifex.org/reference/property_enum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an enum property with predefined values — property_enum","text":"enum property object","code":""},{"path":"https://mcpr.opifex.org/reference/property_enum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an enum property with predefined values — property_enum","text":"","code":"status_prop <- property_enum(   \"Status\",   \"User account status\",   values = c(\"active\", \"pending\", \"suspended\"),   required = TRUE )"},{"path":"https://mcpr.opifex.org/reference/property_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a number property definition — property_number","title":"Create a number property definition — property_number","text":"Create number property definition","code":""},{"path":"https://mcpr.opifex.org/reference/property_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a number property definition — property_number","text":"","code":"property_number(   title,   description,   required = FALSE,   minimum = NULL,   maximum = NULL,   exclusive_minimum = NULL,   exclusive_maximum = NULL,   multiple_of = NULL,   integer = FALSE )"},{"path":"https://mcpr.opifex.org/reference/property_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a number property definition — property_number","text":"title Short title property description Longer description property required Whether property required minimum Optional minimum value maximum Optional maximum value exclusive_minimum Optional logical exclusive minimum exclusive_maximum Optional logical exclusive maximum multiple_of Optional value number must multiple integer Logical indicating number integer","code":""},{"path":"https://mcpr.opifex.org/reference/property_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a number property definition — property_number","text":"number property object","code":""},{"path":"https://mcpr.opifex.org/reference/property_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a number property definition — property_number","text":"","code":"age_prop <- property_number(   \"User age\",   \"The age of the user in years\",   required = TRUE,   minimum = 0,   integer = TRUE )"},{"path":"https://mcpr.opifex.org/reference/property_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object property definition — property_object","title":"Create an object property definition — property_object","text":"Create object property definition","code":""},{"path":"https://mcpr.opifex.org/reference/property_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object property definition — property_object","text":"","code":"property_object(   title,   description,   properties,   required = FALSE,   additional_properties = FALSE )"},{"path":"https://mcpr.opifex.org/reference/property_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object property definition — property_object","text":"title Short title property description Longer description property properties List property definitions object required Whether property required additional_properties Logical indicating additional properties allowed","code":""},{"path":"https://mcpr.opifex.org/reference/property_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an object property definition — property_object","text":"object property object","code":""},{"path":"https://mcpr.opifex.org/reference/property_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an object property definition — property_object","text":"","code":"address_prop <- property_object(   \"Address\",   \"User's address information\",   properties = list(     street = property_string(\"Street\", \"Street address\", required = TRUE),     city = property_string(\"City\", \"City name\", required = TRUE),     country = property_string(\"Country\", \"Country name\")   ) )"},{"path":"https://mcpr.opifex.org/reference/property_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a string property definition — property_string","title":"Create a string property definition — property_string","text":"Create string property definition","code":""},{"path":"https://mcpr.opifex.org/reference/property_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a string property definition — property_string","text":"","code":"property_string(   title,   description,   required = FALSE,   enum = NULL,   pattern = NULL,   min_length = NULL,   max_length = NULL,   format = NULL )"},{"path":"https://mcpr.opifex.org/reference/property_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a string property definition — property_string","text":"title Short title property description Longer description property required Whether property required enum Optional character vector allowed values pattern Optional regex pattern string must match min_length Optional minimum length max_length Optional maximum length format Optional format (e.g., \"date-time\", \"email\", \"uri\")","code":""},{"path":"https://mcpr.opifex.org/reference/property_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a string property definition — property_string","text":"string property object","code":""},{"path":"https://mcpr.opifex.org/reference/property_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a string property definition — property_string","text":"","code":"name_prop <- property_string(   \"User name\",   \"The name of the user\",   required = TRUE,   min_length = 2,   max_length = 50 )"},{"path":"https://mcpr.opifex.org/reference/read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a JSON-RPC response from a client provider — read","title":"Read a JSON-RPC response from a client provider — read","text":"Read JSON-RPC response client provider","code":""},{"path":"https://mcpr.opifex.org/reference/read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a JSON-RPC response from a client provider — read","text":"","code":"read(x, timeout = 60 * 1000)"},{"path":"https://mcpr.opifex.org/reference/read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a JSON-RPC response from a client provider — read","text":"x client provider timeout Timeout milliseconds reading response","code":""},{"path":"https://mcpr.opifex.org/reference/read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a JSON-RPC response from a client provider — read","text":"response","code":""},{"path":"https://mcpr.opifex.org/reference/resources_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List all available resources — resources_list","title":"List all available resources — resources_list","text":"List available resources","code":""},{"path":"https://mcpr.opifex.org/reference/resources_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all available resources — resources_list","text":"","code":"resources_list(mcp)"},{"path":"https://mcpr.opifex.org/reference/resources_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all available resources — resources_list","text":"mcp server object","code":""},{"path":"https://mcpr.opifex.org/reference/resources_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all available resources — resources_list","text":"list containing available resources","code":""},{"path":"https://mcpr.opifex.org/reference/resources_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a resource with the given parameters — resources_read","title":"Read a resource with the given parameters — resources_read","text":"Read resource given parameters","code":""},{"path":"https://mcpr.opifex.org/reference/resources_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a resource with the given parameters — resources_read","text":"","code":"resources_read(mcp, params, id = NULL)"},{"path":"https://mcpr.opifex.org/reference/resources_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a resource with the given parameters — resources_read","text":"mcp server object params Parameters resource read id Optional request ID response tracking","code":""},{"path":"https://mcpr.opifex.org/reference/resources_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a resource with the given parameters — resources_read","text":"response object resource read results error","code":""},{"path":"https://mcpr.opifex.org/reference/response.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a response object — response","title":"Create a response object — response","text":"Create response object","code":""},{"path":"https://mcpr.opifex.org/reference/response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a response object — response","text":"","code":"response_text(text)  response_image(image, mime_type = \"image/png\")  response_audio(audio, mime_type = \"audio/mpeg\")  response_video(video, mime_type = \"video/mp4\")  response_file(file, mime_type = \"application/octet-stream\")  response_resource(resource)  response_error(text)  response_item(   ...,   type = c(\"text\", \"image\", \"audio\", \"video\", \"file\", \"resource\") )  response(..., is_error = FALSE)"},{"path":"https://mcpr.opifex.org/reference/response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a response object — response","text":"text Text content image Image content mime_type Mime type content audio Audio content video Video content file File content resource Resource content ... Mutliple response objects type Type content is_error Whether response error","code":""},{"path":"https://mcpr.opifex.org/reference/response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a response object — response","text":"response object","code":""},{"path":"https://mcpr.opifex.org/reference/response.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a response object — response","text":"Use response_item create custom response item.","code":""},{"path":"https://mcpr.opifex.org/reference/response.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a response object — response","text":"","code":"response(   response_text(\"Hello, world!\"),   response_image(system.file(\"extdata/logo.png\", package = \"mcpr\")),   response_audio(system.file(\"extdata/sound.mp3\", package = \"mcpr\")),   response_video(system.file(\"extdata/video.mp4\", package = \"mcpr\")),   response_file(system.file(\"extdata/file.txt\", package = \"mcpr\")),   response_resource(system.file(\"extdata/resource.json\", package = \"mcpr\")) ) #> $content #> $content[[1]] #> $type #> [1] \"text\" #>  #> $text #> [1] \"Hello, world!\" #>  #> attr(,\"class\") #> [1] \"response_item\"      \"response_item_text\" \"list\"               #>  #> $content[[2]] #> $type #> [1] \"image\" #>  #> $data #> [1] \"\" #>  #> $mimeType #> [1] \"image/png\" #>  #> attr(,\"class\") #> [1] \"response_item\"       \"response_item_image\" \"list\"                #>  #> $content[[3]] #> $type #> [1] \"audio\" #>  #> $data #> [1] \"\" #>  #> $mimeType #> [1] \"audio/mpeg\" #>  #> attr(,\"class\") #> [1] \"response_item\"       \"response_item_audio\" \"list\"                #>  #> $content[[4]] #> $type #> [1] \"video\" #>  #> $data #> [1] \"\" #>  #> $mimeType #> [1] \"video/mp4\" #>  #> attr(,\"class\") #> [1] \"response_item\"       \"response_item_video\" \"list\"                #>  #> $content[[5]] #> $type #> [1] \"file\" #>  #> $data #> [1] \"\" #>  #> $mimeType #> [1] \"application/octet-stream\" #>  #> attr(,\"class\") #> [1] \"response_item\"      \"response_item_file\" \"list\"               #>  #> $content[[6]] #> $type #> [1] \"resource\" #>  #> $resource #> [1] \"\" #>  #> attr(,\"class\") #> [1] \"response_item\"          \"response_item_resource\" \"list\"                   #>  #>  #> $isError #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"response\" \"list\""},{"path":"https://mcpr.opifex.org/reference/schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new input schema — schema","title":"Create a new input schema — schema","text":"Create new input schema","code":""},{"path":"https://mcpr.opifex.org/reference/schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new input schema — schema","text":"","code":"schema(properties, additional_properties = FALSE)"},{"path":"https://mcpr.opifex.org/reference/schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new input schema — schema","text":"properties List property definitions additional_properties Logical indicating additional properties allowed","code":""},{"path":"https://mcpr.opifex.org/reference/schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new input schema — schema","text":"list representing JSON Schema object","code":""},{"path":"https://mcpr.opifex.org/reference/schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new input schema — schema","text":"","code":"schema <- schema(   properties = properties(     name = property_string(\"User name\", \"The name of the user\", required = TRUE),     age = property_number(\"User age\", \"The age of the user in years\", minimum = 0)   ) )"},{"path":"https://mcpr.opifex.org/reference/serve_http.html","id":null,"dir":"Reference","previous_headings":"","what":"Serve an MCP server over HTTP using ambiorix — serve_http","title":"Serve an MCP server over HTTP using ambiorix — serve_http","text":"Serve MCP server HTTP using ambiorix","code":""},{"path":"https://mcpr.opifex.org/reference/serve_http.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serve an MCP server over HTTP using ambiorix — serve_http","text":"","code":"serve_http(mcp, host = \"127.0.0.1\", port = 3000, path = \"/\")"},{"path":"https://mcpr.opifex.org/reference/serve_http.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serve an MCP server over HTTP using ambiorix — serve_http","text":"mcp MCP server object host Host bind , defaults \"127.0.0.1\" port Port listen , defaults 3000 path Path serve MCP endpoint, defaults \"/mcp\"","code":""},{"path":"https://mcpr.opifex.org/reference/serve_http.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Serve an MCP server over HTTP using ambiorix — serve_http","text":"Invisible, runs indefinitely","code":""},{"path":"https://mcpr.opifex.org/reference/serve_io.html","id":null,"dir":"Reference","previous_headings":"","what":"Serve an MCP server using stdin/stdout — serve_io","title":"Serve an MCP server using stdin/stdout — serve_io","text":"Serve MCP server using stdin/stdout","code":""},{"path":"https://mcpr.opifex.org/reference/serve_io.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serve an MCP server using stdin/stdout — serve_io","text":"","code":"serve_io(mcp)"},{"path":"https://mcpr.opifex.org/reference/serve_io.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serve an MCP server using stdin/stdout — serve_io","text":"mcp MCP server object","code":""},{"path":"https://mcpr.opifex.org/reference/serve_io.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Serve an MCP server using stdin/stdout — serve_io","text":"Nothing, runs indefinitely normal mode, response test mode","code":""},{"path":"https://mcpr.opifex.org/reference/to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an R object to JSON — to_json","title":"Convert an R object to JSON — to_json","text":"Convert R object JSON","code":""},{"path":"https://mcpr.opifex.org/reference/to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an R object to JSON — to_json","text":"","code":"to_json(x, ...)"},{"path":"https://mcpr.opifex.org/reference/to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an R object to JSON — to_json","text":"x R object convert JSON ... Additional arguments passed jsonlite::toJSON","code":""},{"path":"https://mcpr.opifex.org/reference/to_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an R object to JSON — to_json","text":"JSON string","code":""},{"path":"https://mcpr.opifex.org/reference/tools_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Call a tool with the given parameters — tools_call","title":"Call a tool with the given parameters — tools_call","text":"Call tool given parameters","code":""},{"path":"https://mcpr.opifex.org/reference/tools_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call a tool with the given parameters — tools_call","text":"","code":"tools_call(mcp, params, id = NULL)"},{"path":"https://mcpr.opifex.org/reference/tools_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call a tool with the given parameters — tools_call","text":"mcp server object params Parameters tool call id Optional request ID response tracking","code":""},{"path":"https://mcpr.opifex.org/reference/tools_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call a tool with the given parameters — tools_call","text":"response object tool call results error","code":""},{"path":"https://mcpr.opifex.org/reference/tools_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List all available tools — tools_list","title":"List all available tools — tools_list","text":"List available tools","code":""},{"path":"https://mcpr.opifex.org/reference/tools_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all available tools — tools_list","text":"","code":"tools_list(mcp)"},{"path":"https://mcpr.opifex.org/reference/tools_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all available tools — tools_list","text":"mcp server object","code":""},{"path":"https://mcpr.opifex.org/reference/tools_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all available tools — tools_list","text":"list containing available tools","code":""},{"path":"https://mcpr.opifex.org/reference/validate_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a JSON-RPC 2.0 request — validate_request","title":"Validate a JSON-RPC 2.0 request — validate_request","text":"Validate JSON-RPC 2.0 request","code":""},{"path":"https://mcpr.opifex.org/reference/validate_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a JSON-RPC 2.0 request — validate_request","text":"","code":"validate_request(request)"},{"path":"https://mcpr.opifex.org/reference/validate_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a JSON-RPC 2.0 request — validate_request","text":"request Parsed request object","code":""},{"path":"https://mcpr.opifex.org/reference/validate_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a JSON-RPC 2.0 request — validate_request","text":"NULL valid, error response invalid","code":""},{"path":"https://mcpr.opifex.org/reference/write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a JSON-RPC request to a client provider — write","title":"Write a JSON-RPC request to a client provider — write","text":"Write JSON-RPC request client provider","code":""},{"path":"https://mcpr.opifex.org/reference/write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a JSON-RPC request to a client provider — write","text":"","code":"write(x, method, params = NULL, id = generate_id(), timeout = 5000)"},{"path":"https://mcpr.opifex.org/reference/write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a JSON-RPC request to a client provider — write","text":"x client provider method method call params parameters pass method id id request timeout Timeout milliseconds reading response","code":""},{"path":"https://mcpr.opifex.org/reference/write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a JSON-RPC request to a client provider — write","text":"client provider","code":""},{"path":[]},{"path":"https://mcpr.opifex.org/news/index.html","id":"major-changes-0-0-1","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"mcpr 0.0.1","text":"new_client() creating client connections local process HTTP servers initialize() initializing client connections tools_list() tools_call() discovering using server tools prompts_list() prompts_get() working server prompts resources_list() resources_read() accessing server resources Renamed new_mcp() (deprecated) new_server() clarity Added example implementations server client Added client usage vignette","code":""},{"path":"https://mcpr.opifex.org/news/index.html","id":"mcpr-000","dir":"Changelog","previous_headings":"","what":"mcpr 0.0.0","title":"mcpr 0.0.0","text":"Initial CRAN submission.","code":""}]
